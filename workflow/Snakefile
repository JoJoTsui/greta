from snakemake.utils import min_version

min_version('7.29.0')

configfile: 'config/config.yaml'
container: 'workflow/envs/gretabench.sif'

def make_combs(path, mthds, name, add_src):
    from itertools import product
    s = '{0}.{1}.{2}.{3}.' + name + '.csv'
    combinations = product(mthds, repeat=4)
    strings = []
    for combo in combinations:
        formatted_string = path + s.format(*combo)
        strings.append(formatted_string)
    s = path + 'random.' + name + '.csv'
    strings.append(s)

    if add_src:
        s = '{0}.src.csv'
        for m in mthds:
            formatted_string = path + s.format(m)
            strings.append(formatted_string)
    return strings

mthds = list(config['methods'].keys())

# Datasets
include: 'rules/datasets/general.smk'
include: 'rules/datasets/pbmc10k.smk'
include: 'rules/datasets/reprofibro.smk'
include: 'rules/datasets/pitupair.smk'
include: 'rules/datasets/pitunpair.smk'
include: 'rules/datasets/heartatlas.smk'

# Methods
include: 'rules/methods/celloracle.smk'
include: 'rules/methods/pando.smk'
include: 'rules/methods/granie.smk'
include: 'rules/methods/figr.smk'
include: 'rules/methods/hummus.smk'
include: 'rules/methods/scenicplus.smk'
include: 'rules/methods/grn.smk'
include: 'rules/methods/random.smk'

# Analyses
include: 'rules/analysis/metrics/prior.smk'
include: 'rules/analysis/metrics/pred.smk'
include: 'rules/analysis/metrics/mech.smk'
include: 'rules/analysis/metrics/utils.smk'
include: 'rules/analysis/stab.smk'
include: 'rules/analysis/topo.smk'

rule all:
    input:
        ''

# snakemake --profile config/slurm/ ...
